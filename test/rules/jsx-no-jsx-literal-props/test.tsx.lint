const jsx = <div />
const good = <Foo bar="car" car dar={() => <div />} />;

const bad = <Foo bar={<div />} />
                      ~~~~~~~ [0]

const bad = <Foo bar={<div>text</div>} />
                      ~~~~~~~~~~~~~~~ [0]

const bad2 = <Foo {...{bar: <div />} />
                            ~~~~~~~ [0]

const badParenthized = <Foo bar={(<div />)} />
                                  ~~~~~~~ [0]


const badTernary = <Foo bar={baz ? <div /> : null)} />
                                   ~~~~~~~ [0]


const badSpread = <Foo {...{bar: <div />}} />
                                 ~~~~~~~ [0]

const badNested = <Foo {...{bar: baz ? (<div />) : 1}} />
                                        ~~~~~~~ [0]

function goodRender() {
    const v = this.props.v
    return (
        <div className="red" v={v} />
    );
}

function badRender_DynamicPropsExpression() {
    return (
        <div {...{bar: <div /> }}
                       ~~~~~~~ [0]
     );
}

function badRender_DynamicExpression() {
    return (
        <div bar={<div />}
                  ~~~~~~~ [0]
     );
}

[0]: JSX literal expressions as JSX properties create new object references on every render and may result in unnecessary re-renders (jsx-no-jsx-literal-props)